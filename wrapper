#!/bin/bash

version="0.20"

# --- Configuration variables ---

# TMDA's distributed tmda-filter executable:
FILTER_BIN=/usr/local/bin/postconfirmc

# Mailman's distributed mailman executable:
MAILMAN_BIN=/var/lib/mailman/mail/mailman

# --- Re-invoke with logging ---
if [ "$RUNNING" != "$0" ]; then
   export RUNNING=$0
   $0 "$@" 2>&1 | logger -i -t postconfirm
   exit ${PIPESTATUS[0]}
fi


# Command line arguments
action="$1"
list="$2"
domain="$3"

[ "$domain" ] || domain=${RECIPIENT##*@}

# Debug switch
DEBUG=""
# Uncomment for debug:
#DEBUG=1

# ----------------
function die() {
    echo -e "\n$program: error: $*" > /dev/stderr
    exit 1
}

# ----------------
function note() { 
    [ "$DEBUG" ] && echo -e "$*"
}

# --- Start of script proper ---

if [ "$DEBUG" ]; then
    echo "-----------------------------"
    date
    cat <<-EOF
	Prog: $0
	Args: $@
	User: $(whoami)
	USER     : $USER
	SENDER   : $SENDER
	RECIPIENT: $RECIPIENT
	EOF
fi
unset HOME

RECIPIENT=${RECIPIENT%@*}@$domain

# This test doesn't work if $domain contains a dash, but ietf.org doesn't ,;-) :
if [ "${SENDER##*-}" = "bounces@$domain" -a "${RECIPIENT##*-}" = "owner@$domain" ]; then
    note " * Mailman response piped directly to mailman"
    $MAILMAN_BIN "$action" "$list"
elif [ "$action" = post -o "$action" = owner -o "$action" = admin ]; then
    # Using a temp file to hold the message isn't pretty, but we need to catch the exit
    # code from tmda_filter to decide whether to pipe stuff into mailman or not, and
    # neither $? or $PIPESTATUS[0] lets us do that inside the pipe itself.
    tmp=$(mktemp -t postconfirm-tmp-XXXXX)
    err=$(mktemp -t postconfirm-err-XXXXX)

    note " * Input piped to postconfirm"
    if $FILTER_BIN >$tmp 2>$err; then
	note " * Input forwarded to mailman"
	$MAILMAN_BIN "$action" "$list" < $tmp
	if [ "$DEBUG" ]; then
	    echo "--- $(date +%Y-%m-%d_%H:%M): $* [$SENDER => $RECIPIENT] ---"	>> /tmp/postconfirm-debug.log
	    head $tmp								>> /tmp/postconfirm-debug.log
	fi
    else
	note " * Error return $? from $FILTER_BIN -- not forwarding"
	[ "$DEBUG" ] && cat $err
    fi
    rm -f $tmp $err
else
    note " * Mailman command piped directly to mailman"
    $MAILMAN_BIN "$action" "$list"
fi

true
